# Generated by Django 2.2.5 on 2019-09-21 10:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('place', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_rating_average', models.FloatField(blank=True, null=True)),
                ('google_user_ratings_total', models.IntegerField(blank=True, null=True)),
                ('user_ratings_total', models.IntegerField(blank=True, null=True)),
                ('rating_average', models.FloatField(blank=True, null=True)),
                ('restaurant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='place.Restaurant', verbose_name='Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(blank=True, max_length=30, null=True)),
                ('author_url', models.URLField(blank=True, max_length=256, null=True)),
                ('profile_photo_url', models.URLField(blank=True, null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('relative_time_description', models.CharField(blank=True, max_length=30, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='user.UserProfile', verbose_name='User')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='place.Restaurant', verbose_name='Restaurant')),
            ],
            options={
                'unique_together': {('restaurant', 'author', 'author_name', 'created_at')},
            },
        ),
    ]
